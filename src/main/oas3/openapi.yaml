openapi: 3.0.1
info:
  title: Sample Bank API
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1

servers:
- url: http://127.0.0.1:8080/v1
  description: Development server

paths:
  '/':
    get:
      operationId: healthcheck
      responses:
        200:
          description: A simple string response
          content:
            text/plain:
              schema:
                type: string
        500:
          $ref: '#/components/responses/500InternalServerErrorResponse'

  '/customers':
    post:
      operationId: createCustomer
      parameters:
        - $ref: '#/components/schemas/CreateCustomerRequest'
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetails'
          headers:
            Location:
              description: URI of newly created customer resource
              schema:
                type: string
        400:
          $ref: '#/components/responses/400BadRequest'
        500:
          $ref: '#/components/responses/500InternalServerErrorResponse'

  '/customers/{customerId}':
    get:
      operationId: getCustomerDetails
      parameters:
        - $ref: '#/components/parameters/customerIdParam'
      responses:
        200:
          description: Customer with acconunts & transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetails'
        400:
          $ref: '#/components/responses/400BadRequest'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
        500:
          $ref: '#/components/responses/500InternalServerErrorResponse'

  '/customers/{customerId}/accounts':
    post:
      operationId: createAccount
      parameters:
        - $ref: '#/components/parameters/customerIdParam'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        200:
          description: Customer with accounts & transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetails'
        400:
          $ref: '#/components/responses/400BadRequest'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
        500:
          $ref: '#/components/responses/500InternalServerErrorResponse'

  '/customers/{customerId}/accounts/{accountId}':
    get:
      operationId: getAccountStatement
      parameters:
        - $ref: '#/components/parameters/customerIdParam'
        - $ref: '#/components/parameters/accountIdParam'
      responses:
        200:
          description: AccountStatement with transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatement'
        400:
          $ref: '#/components/responses/400BadRequest'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
        500:
          $ref: '#/components/responses/500InternalServerErrorResponse'

components:
  parameters:
    customerIdParam:
      in: path
      name: customerId
      required: true
      schema:
        type: integer
        minimum: 1
      description: Customer ID
    accountIdParam:
      in: path
      name: accountId
      required: true
      schema:
        type: integer
        minimum: 1
      description: Account ID

  responses:
    400BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    404NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    500InternalServerErrorResponse:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:

    CustomerId:
      type: integer
      format: int32
      minimum: 1

    AccountId:
      type: integer
      format: int32
      minimum: 1

    TransactionId:
      type: string
      format: uuid

    OffsetDateTime:
      type: string
      format: dateTime

    AccountType:
      type: string
      enum:
        - CURRENT
        - SAVINGS
      default: CURRENT

    Transaction:
      required:
        - id
        - accountId
        - amount
        - timestamp
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        accountId:
          $ref: '#/components/schemas/AccountId'
        amount:
          type: number
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          $ref: '#/components/schemas/OffsetDateTime'
        counterpartyAccountRef:
          type: string

    AccountStatement:
      required:
        - id
        - type
        - balance
        - timestamp
        - transactions
      properties:
        id:
          $ref: '#/components/schemas/AccountId'
        type:
          $ref: '#/components/schemas/AccountType'
        balance:
          type: number
          minimum: 0
        timestamp:
          $ref: '#/components/schemas/OffsetDateTime'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'

    CustomerDetails:
      type: object
      required:
        - id
        - firstName
        - lastName
        - balance
        - accounts
      properties:
        id:
          $ref: '#/components/schemas/CustomerId'
        firstName:
          type: string
        lastName:
          type: string
        balance:
          type: number
          minimum: 0
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountStatement'

    CreateCustomerRequest:
      properties:
        firstName:
          type: string
        lastName:
          type: string
      required:
        - firstName
        - lastName

    CreateAccountRequest:
      properties:
        initialCredit:
          type: number
          minimum: 1
          default: 0
        type:
          $ref: '#/components/schemas/AccountType'

    ErrorResponse:
      required:
        - status
        - title
      properties:
        status:
          description: HTTP status code
          type: integer
        title:
          description: Generic error description
          type: string
        detail:
          description: Specific error description
          type: string
